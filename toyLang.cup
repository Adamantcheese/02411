/* RESERVED WORD TERMINALS */
terminal __boolean__, __break__;
terminal __class__;
terminal __double__;
terminal __else__, __extends__;
terminal __for__;
terminal __if__, __implements__, __int__, __interface__;
terminal __newarray__;
terminal __println__;
terminal __readln__, __return__;
terminal __string__;
terminal __void__;
terminal __while__;

/* OPERATOR AND CONSTANT TERMINALS */
terminal __plus__, __minus__, __multiplication__, __division__, __mod__;
terminal __less__, __lessequal__, __greater__, __greaterequal__, __equal__, __notequal__;
terminal __and__, __or__, __not__;
terminal __assignop__, __comma__, __semicolon__, __period__, __uminus__;
terminal __leftparen__, __rightparen__, __leftbracket__, __rightbracket__, __leftbrace__, __rightbrace__;
terminal __intconstant__, __doubleconstant__, __stringconstant__, __booleanconstant__, __id__;

/* NONTERMINALS */
non terminal S, Program;
non terminal Decl, VariableDecl, FunctionDecl;
non terminal Variable, Type, ArrType;
non terminal Formals, FormalsList, OptExtends, OptImplements, IdList, FieldSet, Field, PrototypeSet, Prototype;
non terminal StmtBlock, VariableDeclSet, StmtSet;
non terminal Stmt, OptExpr, OptElse;
non terminal ExprList, Expr, MathExpr, ParenExpr, Lvalue, LvalueQualifers, Call, Actuals, Constant;

/* PRECEDENCE RULES */
precedence left __or__;
precedence left __and__;
precedence left __equal__, __notequal__;
precedence left __less__, __lessequal__, __greater__, __greaterequal__;
precedence left __plus__, __minus__;
precedence left __multiplication__, __division__, __mod__;
precedence right __not__, __uminus__;
precedence left __leftbracket__, __period__;

/* CONTEXT FREE GRAMMAR */
S				::= Program
                        {: System.out.print("[reduce 0]"); :}
                    ;
Program			::= Decl
                        {: System.out.print("[reduce 1]"); :}
					|
					Decl Program
					    {: System.out.print("[reduce 2]"); :}
					;
Decl 			::= VariableDecl
                        {: System.out.print("[reduce 3]"); :}
					|
					FunctionDecl
					    {: System.out.print("[reduce 4]"); :}
					|
					__class__ __id__ OptExtends OptImplements __leftbrace__ FieldSet __rightbrace__
					    {: System.out.print("[reduce 5]"); :}
					|
					__interface__ __id__ __leftbrace__ PrototypeSet __rightbrace__
					    {: System.out.print("[reduce 6]"); :}
					;
VariableDecl	::= Variable __semicolon__
                        {: System.out.print("[reduce 7]"); :}
                    ;
Variable		::= Type __id__
                        {: System.out.print("[reduce 8]"); :}
                    ;
Type			::= __int__ ArrType
                        {: System.out.print("[reduce 9]"); :}
					|
					__double__ ArrType
					    {: System.out.print("[reduce 10]"); :}
					|
					__boolean__ ArrType
					    {: System.out.print("[reduce 11]"); :}
					|
					__string__ ArrType
					    {: System.out.print("[reduce 12]"); :}
					|
					__id__ ArrType
					    {: System.out.print("[reduce 13]"); :}
					;
ArrType			::= __leftbracket__ __rightbracket__ ArrType
                        {: System.out.print("[reduce 14]"); :}
					|
					    {: System.out.print("[reduce 15]"); :}
					;
FunctionDecl	::= Type __id__ __leftparen__ Formals __rightparen__ StmtBlock
                        {: System.out.print("[reduce 16]"); :}
					|
					__void__ __id__ __leftparen__ Formals __rightparen__ StmtBlock
					    {: System.out.print("[reduce 17]"); :}
					;
Formals			::= FormalsList
                        {: System.out.print("[reduce 18]"); :}
					|
					    {: System.out.print("[reduce 19]"); :}
					;
FormalsList		::= Variable
                        {: System.out.print("[reduce 20]"); :}
					|
					Variable __comma__ FormalsList
					    {: System.out.print("[reduce 21]"); :}
					;
OptExtends		::= __extends__ __id__
                        {: System.out.print("[reduce 22]"); :}
					|
					    {: System.out.print("[reduce 23]"); :}
					;
OptImplements 	::= __implements__ IdList
                        {: System.out.print("[reduce 24]"); :}
					|
					    {: System.out.print("[reduce 25]"); :}
					;
IdList			::= __id__
                        {: System.out.print("[reduce 26]"); :}
					|
					__id__ __comma__ IdList
					    {: System.out.print("[reduce 27]"); :}
					;
FieldSet			::= Field FieldSet
                        {: System.out.print("[reduce 28]"); :}
					|
					    {: System.out.print("[reduce 29]"); :}
					;
Field			::= FunctionDecl
                        {: System.out.print("[reduce 30]"); :}
					|
					VariableDecl
					    {: System.out.print("[reduce 31]"); :}
					;
PrototypeSet		::= Prototype PrototypeSet
                        {: System.out.print("[reduce 32]"); :}
					|
					    {: System.out.print("[reduce 33]"); :}
					;
Prototype		::= Type __id__ __leftparen__ Formals __rightparen__ __semicolon__
                        {: System.out.print("[reduce 34]"); :}
					|
					__void__ __id__ __leftparen__ Formals __rightparen__ __semicolon__
					    {: System.out.print("[reduce 35]"); :}
					;
StmtBlock		::= __leftbrace__ VariableDeclSet StmtSet __rightbrace__
                        {: System.out.print("[reduce 36]"); :}
                    ;
VariableDeclSet	::= VariableDecl VariableDeclSet
                        {: System.out.print("[reduce 37]"); :}
					|
					    {: System.out.print("[reduce 38]"); :}
					;
StmtSet			::= Stmt StmtSet
                        {: System.out.print("[reduce 39]"); :}
					|
					    {: System.out.print("[reduce 40]"); :}
					;
Stmt			::= OptExpr __semicolon__
                        {: System.out.print("[reduce 41]"); :}
					|
					__if__ __leftparen__ Expr __rightparen__ Stmt OptElse
					    {: System.out.print("[reduce 42]"); :}
					|
					__while__ __leftparen__ Expr __rightparen__ Stmt
					    {: System.out.print("[reduce 43]"); :}
					|
					__for__ __leftparen__ OptExpr __semicolon__ Expr __semicolon__ OptExpr __rightparen__ Stmt
					    {: System.out.print("[reduce 44]"); :}
					|
					__break__ __semicolon__
					    {: System.out.print("[reduce 45]"); :}
					|
					__return__ OptExpr __semicolon__
					    {: System.out.print("[reduce 46]"); :}
					|
					__println__ __leftparen__ ExprList __rightparen__ __semicolon__
					    {: System.out.print("[reduce 47]"); :}
					|
					StmtBlock
					    {: System.out.print("[reduce 48]"); :}
					;
OptExpr         ::= Expr
                        {: System.out.print("[reduce 49]"); :}
                    |
                        {: System.out.print("[reduce 50]"); :}
                    ;
OptElse         ::= __else__ Stmt
                        {: System.out.print("[reduce 51]"); :}
                    |
                        {: System.out.print("[reduce 52]"); :}
                    ;
ExprList			::= Expr
                        {: System.out.print("[reduce 53]"); :}
					|
					Expr __comma__ ExprList
					    {: System.out.print("[reduce 54]"); :}
					;
Expr            ::= Lvalue __assignop__ Expr
                        {: System.out.print("[reduce 55]"); :}
                    |
                    MathExpr
                        {: System.out.print("[reduce 56]"); :}
                    ;
MathExpr		::= Constant
					    {: System.out.print("[reduce 57]"); :}
					|
					Lvalue
					    {: System.out.print("[reduce 58]"); :}
					|
					Call
					    {: System.out.print("[reduce 59]"); :}
					|
					Expr __plus__ Expr
					    {: System.out.print("[reduce 61]"); :}
					|
					Expr __minus__ Expr
					    {: System.out.print("[reduce 62]"); :}
					|
					Expr __multiplication__ Expr
					    {: System.out.print("[reduce 63]"); :}
					|
					Expr __division__ Expr
					    {: System.out.print("[reduce 64]"); :}
					|
					Expr __mod__ Expr
					    {: System.out.print("[reduce 65]"); :}
					|
					__minus__ Expr
					    {: System.out.print("[reduce 66]"); :}
					    %prec __uminus__
					|
					Expr __less__ Expr
					    {: System.out.print("[reduce 67]"); :}
					|
					Expr __lessequal__ Expr
					    {: System.out.print("[reduce 68]"); :}
					|
					Expr __greater__ Expr
					    {: System.out.print("[reduce 69]"); :}
					|
					Expr __greaterequal__ Expr
					    {: System.out.print("[reduce 70]"); :}
					|
					Expr __equal__ Expr
					    {: System.out.print("[reduce 71]"); :}
					|
					Expr __notequal__ Expr
					    {: System.out.print("[reduce 72]"); :}
					|
					Expr __and__ Expr
					    {: System.out.print("[reduce 73]"); :}
					|
					Expr __or__ Expr
					    {: System.out.print("[reduce 74]"); :}
					|
					__not__ Expr
					    {: System.out.print("[reduce 75]"); :}
					|
					ParenExpr
					    {: System.out.print("[reduce 76]"); :}
					;
ParenExpr       ::= __leftparen__ Expr __rightparen__
                        {: System.out.print("[reduce 77]"); :}
                    ;
Lvalue			::= __id__ LvalueQualifers
                        {: System.out.print("[reduce 78]"); :}
					;
LvalueQualifers ::= __leftbracket__ Expr __rightbracket__ LvalueQualifers
					    {: System.out.print("[reduce 79]"); :}
					|
					__period__ __id__ LvalueQualifers
					    {: System.out.print("[reduce 80]"); :}
					|
					    {: System.out.print("[reduce 81]"); :}
					;
Call			::= __id__ __leftparen__ Actuals __rightparen__
                        {: System.out.print("[reduce 82]"); :}
					|
					__id__ __period__ __id__ __leftparen__ Actuals __rightparen__
					    {: System.out.print("[reduce 83]"); :}
					|
					__newarray__ __leftparen__ __intconstant__ __comma__ Type __rightparen__
					    {: System.out.print("[reduce 84]"); :}
					|
					__readln__ __leftparen__ __rightparen__
					    {: System.out.print("[reduce 85]"); :}
					;
Actuals			::= ExprList
                        {: System.out.print("[reduce 86]"); :}
					|
					    {: System.out.print("[reduce 87]"); :}
					;
Constant		::= __intconstant__
                        {: System.out.print("[reduce 88]"); :}
					|
					__doubleconstant__
					    {: System.out.print("[reduce 89]"); :}
					|
					__stringconstant__
					    {: System.out.print("[reduce 90]"); :}
					|
					__booleanconstant__
					    {: System.out.print("[reduce 91]"); :}
					;